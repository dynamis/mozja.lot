Sorry, this Usage Help is obsolate.
We'll rewrite this for curret lot in the future...


 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

               Localization Tools (lot) Usage Help

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

	1. about

The number of features and configures of Localization Tools (lot)
are growing and some of them are not stable yet. It costs too much
to describe all about lot. This usage help describe about only some
part of lot but I believe that short introduction is more useful
than long detailed document. I think this is enough for most users
to start working with lot.

Someday in the future I maybe write more detailed document about
lot but this is all for you so far. If you need more information
right now, use '-p' option of ant first.
  $ ant -p
This will show you all public interface of lot. You can use them.
When you see something stupid, read the source of build scripts or
just ask me please. It may be the bug and I need your bug reports.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

	2. table of contents

  1. about
  2. table of contents
  3. basic usage
    3.1. make firefox 1.5 langpack
    3.2. make other packages
    3.3. make your own packages
  4. usage samples
    4.1. backup and restore
    4.2. working with diff
    4.3. working with cvs

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

	3. basic usage

    3.1 make firefox 1.5 langpack

To make Firefox langpack xpi package, just type this.
  $ ant
After showing short introduction message, lot will make package
automatically on behalf of you. ;)

Now you have many new files under 'loose' and 'dest' directories.
Former one contains intermediate output. They are generated from
source files (in 'src') and template files (in 'tpl') according to
configurations (in 'config') and filters (in 'filters').
Later one contains xpi packages in 'firefox' subdirectory. That dir
also contains revision number and locale name directories. You will
find the files inside the xpi package under these directories.
You can install xpi package and you can also check output files.

After each modification of src files, type this again.
  $ ant
This will get new xpi package with your modification. But this time
you'll see confirmation about overwrite. Lot don't remove nor over-
write existing files quietly. To make new xpi package, you should
answer yes or just remove existing files before generating.
Yes, as you feel, this is safe but a little bothering. You can use
next command so that you don't need to answer to confirmation.
  $ ant auto build
This will overwrite existing files without asking you.

To change output xpi filename or other config, edit below file.
  config/trunk/firefox.conf
Editing config and src files, you can also creat your own langpack.

    3.2. make other packages

Now, let's proceed next step. In the above example, you have made
trunk firefox lanpacks though, lot isn't the tool only for it.
Let's make other packages now.
  $ ant -Dmode=aviary
  $ ant -Dmode=trunk
  $ ant -Dpackage=thunderbird
  $ ant -Dmode=aviary -Dpackage=thunderbird
  $ ant -Dmode=trunk  -Dpackage=thunderbird
  $ ant -Dmode=extension -Dpackage=venkman
These commands will make Firefox 1.0.x, Trunk langpack, Thunderbird
1.5, 1.0.x and Trunk langpack, and venkman extension respectively.

[note] firefox/thunderbird langpacks share src files.
       Diff of the ja/ja-JP-mac are splited into filters files.

    3.3. make your own packages

Lot is the tool for every package for Mozilla Products. You can
also use lot for your own extension. All the features cannot be
explained and I wrote here only several guide to do it.
  1. Deside your package name (call it 'foo').
  2. Add 'src/extension/foo' dir and include all the files of foo
     extension with the same structure as one in the xpi package.
  3. Make config file 'config/extension/foo.conf'.
     You can use 'sample.conf' as the start point.
  4. Then, exec ant with '-Dpackage=foo' option.
You'll get xpi package in 'dest/foo' unless you made a mistake.
Be sure about directory structure and filenames are correct.

You can add template or extension specific build file as you need.
See existing extension's src, tpl, conf and build files.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

	4. usage samples

    4.1. backup and restore

To backup whole lot, type this.
  $ ant backuplot
You'll get zip file in 'backup/lot' directory.

[note] Distributed lot pacakge is made with this.

You can backup only src files like this.
  $ ant backupsrc
You'll get zip file in 'backup/mozilla1.8' directory. Yes, only
src files for mozilla1.8 branch will be backuped now. You can also
backup aviary, trunk or extension src files with these options.
  $ ant backupsrc -Dmode=aviary
  $ ant backupsrc -Dmode=trunk
  $ ant backupsrc -Dmode=extension

To tweak which files will be included, modify backup* configs
defined in 'config/lot.conf'.

To restore from backuped src file, type next:
  $ ant restoresrc -Dfile=backupfile.zip
Existing src file will be removed and replaced with backuped ones.

[note] restoresrc will call backupsrc before replacing src files. 

    4.2. working with diff

You can generate diff of langage resources with lot.
  $ ant diff-src
  $ ant diff-loose
  $ ant diff-jar -Dlocale=ja
  $ ant diff-xpi -Dlocale=ja-JP-mac
These will diff between en-US and ja src files, ja and ja-JP-mac
loose files, two revision jar file of ja locale, two revision xpi
package of ja-JP-mac respectively. Generated diff output will be
in 'diff' directory.
You can chage locale and revision to be diffed with tweaking conf
in 'config/mozilla1.8/firefox.conf'.

[note] These targets require diff command and you must set 'path'
       env to diff command (on windows, you can use cygwin's one).

You can of cource get diff of aviary, trunk or thunderbird too.
  $ ant diff-src -Dmode=aviary
  $ ant diff-loose -Dpackage=thunderbird
  $ ant diff-jar -Dmode=trunk -Dpackage=thunderbird -Dlocale=ja
  $ ant diff-xpi -Dlocale=ja -Ddiff.xpi.fromrevision=1.0.5
The last example set 'diff.xpi.fromrevision' property to specify
which revision to be diffed without changing config file. Like this
from the command line, you can overwrite any property defined in
config files.

Lot also can output diff with html format.
  $ ant lpdiff-src
  $ ant lpdiff-loose
  $ ant lpdiff-jar -Dlocale=ja
  $ ant lpdiff-xpi -Dlocale=ja
Html diff table will be generated in 'lpdiff' dir. Check them.
These targets will use LpDiff. See below url for more about LpDiff.
  http://www.mozilla-japan.org/jp/l10n/lpdiff/

[note] Sorry but LpDiff will work fine only on windows.

    4.3. working with cvs

Lot have the features as the cvs command interface (cvs command is
required). Lot allow you to work with mozilla.org public cvs server
easily without knowing about cvs command and server setting.

To start working with cvs, make .cvspass file first.
  $ ant cvs-cvspass
'cvs/.cvspass' file will be created according to settings written
in 'config/lot.conf'. After this, you can use other commands.

Following command will checkout latest en-US or ja locale files.
All cvs relating targets use en-US as a defaut locale.
  $ ant cvs-checkout
  $ ant cvs-checkout -Dlocale=ja
You can see checkouted files under 'cvs/checkout' dir.

If you want to get locale files without CVS directories, you should
export from cvs server like this.
  $ ant cvs-export
Locale files will be exported under 'cvs/export' dir.

You can specify the date of exported files like this.
  $ ant cvs-export -Ddate=2005-06-01
  $ ant cvs-export -Ddate="last week"

[note] If you specify a date with string including whitespace, you
       must enclose it with double quotation, not with single one.

To know recent update, you should use cvs rdiff command.
  $ ant cvs-rdiff
You will get diff added from 2 weeks ago to today. Diff file will
be generated under 'cvs/mozilla1.8/rdiff' dir.

Of cource you can specify the period of changes like this.
  $ ant cvs-rdiff -Dstartdate=2005-07-01
  $ ant cvs-rdiff -Dstartdate=2005-06-01 -Denddate=2005-07-01

If you want to check cvs commit log, here is the command which can
generate html about changelog.
  $ ant cvs-chengelog
  $ ant cvs-changelog -Dcvs.log.module=l10n/ja
By default, these will generate html about changes commited in this
2 weeks. Changelog html are placed under 'cvs/mozilla1.8/changelog'
dir. They have link to lxr and bonsai so that you can check more
detail easily.

[note] Before using cvs-changelog, you must cvs-checkout files.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

                                           lastupdate: 2005/12/17
                                               author: dynamis

 