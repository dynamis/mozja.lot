<?xml version="1.0" encoding="UTF-8"?>
<project name="compare" default="" basedir=".">
<description>diff/compare/merge targets</description>
<property name="buildfile.compare.loaded" value="true"/>


<!-- * diff and patch * -->
<!-- set path to the diff command to use these tasks, or you'll see a "error=2" -->
<target name="diff" depends="load-mainconf"
	description="make patch file to send it as a feedback">
	<loadmessage pattern="^vmsg\.diff\."/>
	<fail message="${vmsg.diff.no.fromdir}">
		<condition><not><available file="${diff.fromdir}" type="dir"/></not></condition>
	</fail>
	<fail message="${vmsg.diff.no.todir}">
		<condition><not><available file="${diff.todir}" type="dir"/></not></condition>
	</fail>
	
	<mkdir dir="${diff.output.dir}"/>
	<diff dir="." from="${diff.fromdir}" to="${diff.todir}" option="${diff.option}" output="${diff.output}" append="false"/>
	<echo message="${vmsg.diff.successed}"/>
</target>

<target name="patch" depends="load-mainconf"
	description="apply patch file to src locale files">
	<loadmessage pattern="^vmsg\.patch\."/>
	<fail message="${vmsg.patch.no.patchfile}">
		<condition><not><available file="${patch.file}" type="file"/></not></condition>
	</fail>
	
	<property name="patch.strip" value="3"/>
	<property name="patch.locale" value="ja"/>
	<patch patchfile="${patch.file}" strip="${patch.strip}" dir="${lot.src.dir}/${mode}/${patch.locale}"/>
	<!-- patch -p3 -d src/trunk/ja < patch/trunk/patchfile -->
</target>

<target name="patch-dry" depends="load-mainconf"
	description="test patch file without any actual changes">
	<loadmessage pattern="^vmsg\.patch\."/>
	<fail message="${vmsg.patch.no.patchfile}">
		<condition><not><available file="${patch.file}" type="file"/></not></condition>
	</fail>
	
	<property name="patch.strip" value="3"/>
	<property name="patch.locale" value="ja"/>
	<exec executable="patch" input="${patch.file}">
		<arg line="--dry-run -p${patch.strip} -d ${lot.src.dir}/${mode}/${patch.locale}"/>
	</exec>
	<!-- patch - -dry-run -p3 -d ${lot.src.dir}/${mode}/${patch.locale} < ${patch.file} -->
</target>



<!-- * compare/merge locales * -->
<macrodef name="compare">
	<!-- mode = compare, merge (insert+clean), resetorder, resetcomment, resetaccesskey -->
	<attribute name="mode"				default="compare"/>
	<attribute name="locale1"			default="en-US"/>
	<attribute name="locale2"			default="ja"/>
	<attribute name="dir1"				default="${lot.l10n.dir}/@{locale1}"/>
	<attribute name="dir2"				default="${lot.l10n.dir}/@{locale2}"/>
	<attribute name="excludes"			default=""/>
	<attribute name="output"			default="${compare.output}"/>
	<attribute name="format"			default="text"/>
	<attribute name="failonerror"		default="false"/>
	<sequential>
	<groovy taskname="compare" src="compare.groovy">
		<!-- pass attributes using args to avoid being interprited as groovy code -->
		<arg value="@{mode}"/>
		<arg value="@{locale1}"/>
		<arg value="@{locale2}"/>
		<arg value="@{dir1}"/>
		<arg value="@{dir2}"/>
		<arg value="@{excludes}"/>
		<arg value="@{output}"/>
		<arg value="@{format}"/>
		<arg value="@{failonerror}"/>
	</groovy>
	</sequential>
</macrodef>

<target name="compare" depends="load-conf" unless="nocompare"
	description="compare l10n files and check new/obsolate files/entities etc">
	<property name="compare.mode" value="compare"/>
	<compare locale2="${locale}" dir2="${compare.dir}" excludes="${compare.excludes}"
		mode="${compare.mode}" failonerror="false"/>
</target>

<target name="merge" depends="load-conf" unless="nomerge"
	description="compare l10n files and merge new/obsolate files/entities">
	<confirm message="${lot.l10n.dir}/en-US ディレクトリのファイルと ${merge.dir} ディレクトリのファイルを比較し、新しいファイルやエンティティを追加、古いものは削除します。実行してもよろしいですか？ (Y/N)${N}次のファイルやディレクトリは除外されます: ${merge.excludes}${N}注: 古いものを削除せず残したい場合は merge ではなく insertnew ターゲットを使用してください。"/>
	<compare locale2="${locale}" dir2="${merge.dir}" excludes="${merge.excludes}"
		mode="merge" output="${merge.output}" failonerror="true"/>
	<echo message="ブロック最初のエンティティが削除される場合、ブロックに対するコメントがそのエンティティ単体のものとして削除されることがあります(現時点での仕様)。必ず処理結果を差分ファイルで確認し、必要に応じて修正してください。"/>
</target>

<target name="mergeonlyfile" depends="load-conf" unless="nomerge"
	description="compare l10n files and merge new/obsolate files (not merge entities)">
	<confirm message="${lot.l10n.dir}/en-US ディレクトリのファイルと ${merge.dir} ディレクトリのファイルを比較し、新しいファイルを追加、古いものは削除します。実行してもよろしいですか？ (Y/N)${N}次のファイルやディレクトリは除外されます: ${merge.excludes}"/>
	<compare locale2="${locale}" dir2="${merge.dir}" excludes="${merge.excludes}"
		mode="merge+onlyfile" output="${merge.output}" failonerror="true"/>
</target>

<target name="insertnew" depends="load-conf" unless="nomerge"
	description="compare l10n files and merge new files/entities (not remove obsolate ones)">
	<confirm message="${lot.l10n.dir}/en-US ディレクトリのファイルを ${merge.dir} ディレクトリのファイルを比較し、新しいファイルやエンティティを追加します。実行してもよろしいですか？ (Y/N)${N}次のファイルやディレクトリは除外されます: ${merge.excludes}"/>
	<compare locale2="${locale}" dir2="${merge.dir}" excludes="${merge.excludes}"
		mode="insert" output="${merge.output}" failonerror="true"/>
</target>

<target name="resetaccesskey" depends="load-conf" unless="nomerge"
	description="compare l10n files and reset accesskeys">
	<confirm message="${lot.l10n.dir}/en-US ディレクトリと ${merge.dir} ディレクトリのファイルのアクセスキーを比較し、異なるものは前者の定義に書き換えます。実行してもよろしいですか？ (Y/N)${N}次のファイルやディレクトリは除外されます: ${resetaccesskey.excludes}"/>
	<compare locale2="${locale}" dir2="${resetaccesskey.dir}" excludes="${resetaccesskey.excludes}"
		mode="resetaccesskey" output="${resetaccesskey.output}" failonerror="true"/>
</target>


</project>
